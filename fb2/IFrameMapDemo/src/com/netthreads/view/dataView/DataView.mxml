<?xml version="1.0" encoding="utf-8"?>
<!--
 * Copyright 2008 -  Alistair Rutherford - www.netthreads.co.uk, Jan 2008
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 * 
-->
<mx:Box xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="init()">

	<mx:Metadata>
	    [Event(name="centre", type="flash.events.Event")]
	</mx:Metadata>

	<mx:Script>
		<![CDATA[
			import com.netthreads.view.controller.MapViewController;
			import com.netthreads.vo.PlaceVO;
			import com.netthreads.model.DataModel;
			import mx.collections.ArrayCollection;

	        [Bindable] public var values:ArrayCollection = null;
	
			[Bindable] public var selected:PlaceVO = null;
			
			/**
			* Initialise view. Add listener for changes to data provider source.
			*
			*/
			private function init():void
			{
				var locator:DataModel = DataModel.getInstance();
				
				locator.addEventListener(DataModel.EVENT_UPDATED, onUpdate);
								
	            values = new ArrayCollection(locator.data.source);
			}
			
	        /**
	        * Update list
	        *
	        */
	        private function onUpdate(event:Event):void
	        {
	            values.refresh();
	        } 
        	
        	/**
        	* Datagrid click handler.
        	*
        	*/
        	private function onClick(ev:Event):void
        	{
				var target:PlaceVO = PlaceVO(ev.currentTarget.selectedItem);
				
				if (target!=null)
				{
					selected = target;
					
					// Signal up to parent view that we want to centre on an item.
					var centreEvent:Event = new Event("centre",false);
					this.dispatchEvent(centreEvent);
				}	
        	}	
		]]>
	</mx:Script>

	<mx:DataGrid id="placesGrid"
        		height="100%" 
        		width="100%"
        		variableRowHeight="true"
        		dataProvider="{values}"
        		click="onClick(event)">
        		
       <mx:columns>
			<mx:Array>
			
				<mx:DataGridColumn headerText="Name"
					               dataField="id" 
					               wordWrap="true"
								   textAlign="left"/>
								   
				<mx:DataGridColumn headerText="Description"
					               dataField="description" 
					               wordWrap="true"
								   textAlign="left"/>
			</mx:Array>
       	
       </mx:columns>
		
	</mx:DataGrid>
</mx:Box>
